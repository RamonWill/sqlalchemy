.. change::
    :tags: change, engine
    :tickets: 4710

    The ``RowProxy`` class is no longer a "proxy" object, and is instead
    directly populated with the post-processed contents of the DBAPI row tuple
    upon construction.   Now named :class:`.Row`, the mechanics of how the
    Python-level value processors have been simplified, particularly as it impacts the
    format of the C code, so that a DBAPI row is processed into a result tuple
    up front.   The object returned by the :class:`.ResultProxy` is now the
    :class:`.LegacyRow` subclass, which maintains mapping/tuple hybrid behavior,
    however the base :class:`.Row` class now behaves more fully like a named
    tuple.

    .. seealso::

        :ref:`change_4710_core`


.. change::
    :tags: change, orm
    :tickets: 4710

    The "KeyedTuple" class returned by :class:`.Query` is now replaced with the
    Core :class:`.Row` class, which behaves in the same way as KeyedTuple.
    In SQLAlchemy 2.0, both Core and ORM will return result rows using the same
    :class:`.Row` object.   In the interim, Core uses a backwards-compatibility
    class :class:`.LegacyRow` that maintains the former mapping/tuple hybrid
    behavior used by "RowProxy".

    .. seealso::

        :ref:`change_4710_orm`